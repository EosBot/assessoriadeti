version: '3.8'

services:
  base: &base
    image: chatwoot/chatwoot:latest
    env_file: stack.env
    volumes:
      - /data/chatwoot_storage:/app/storage
    networks:
      - portainer_default

  rails:
    <<: *base
    restart: always
    depends_on:
      - postgres
      - redis
    ports:
      - '127.0.0.1:3000:3000'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chatwoot.rule=Host(`chat.eosbot.com.br`)" #Troque pelo seu Dominio ou Subdominio
      - "traefik.http.routers.chatwoot.entrypoints=websecure"
      - "traefik.http.routers.chatwoot.tls.certresolver=cloudflare"
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    command:
      - sh
      - -c
      - |
        bundle exec rails db:migrate && bundle exec rails db:seed && bundle exec rails db:chatwoot_prepare && bundle exec rails s -p 3000 -b 0.0.0.0

  sidekiq:
    <<: *base
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']

  postgres:
    image: postgres:12
    restart: always
    ports:
      - '127.0.0.1:5432:5432'
    volumes:
      - /data/chatwoot_postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chatwoot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Xv34h32m@
    networks:
      - portainer_default

  redis:
    image: redis:alpine
    restart: always
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    env_file: stack.env
    volumes:
      - /data/chatwoot_redis:/data
    ports:
      - '127.0.0.1:6379:6379'
    networks:
      - portainer_default

networks:
  portainer_default:
    external: true
